{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The desired password credential for administrative access to the VM on which Modality Teamwork Analytics will run as a Windows service."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v5",
            "allowedValues": [
                "Standard_D2s_v5",
                "Standard_D4s_v5",
                "Standard_D8s_v5",
                "Standard_D16s_v5"
            ],
            "metadata": {
                "description": "The desired VM size to install."
            }
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [
                1,
                3,
                5,
                7
            ]
        },
        "DeploymentGroup": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "The desired VM size to install."
            }
        },
        "AzureAccountUrl": {
            "type": "string",
            "metadata": {
                "description": "The Azure DevOps account url for the VM to be associated."
            }
        },
        "AzureProject": {
            "type": "string",
            "metadata": {
                "description": "The Azure DevOps project for the VM to be associated."
            }
        },
        "AzureDeploymentGroup": {
            "type": "string",
            "metadata": {
                "description": "The Azure DevOps deployment group for the VM to be associated."
            }
        },
        "AzurePoolIds": {
            "type": "string",
            "metadata": {
                "description": "Comma Seperated List of Pool ID's for ClearUpAgents Automation Account"
            }
        },
        "AzureToken": {
            "type": "securestring",
            "metadata": {
                "description": "The Azure DevOps PAT Token."
            }
        }
    },
    "variables": {
        "BlobStorageContainer": "scripts",
        "BlobStorageUri": "https://raw.githubusercontent.com/modalitysystems/vsts-agent/master",
        "JobSchedulesName": "[concat('ClearUpAgents/', guid(resourceGroup().id))]",
        "TimeStamp": "1"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "vnet",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "10.0.1.0/26",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "Default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            },
            "resources": [
                {
                    "type": "Microsoft.Network/virtualNetworks/subnets",
                    "apiVersion": "2020-11-01",
                    "name": "[concat('vnet', '/AzureBastionSubnet')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', 'vnet')]"
                    ],
                    "properties": {
                        "addressPrefix": "10.0.1.0/26",
                        "delegations": [],
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                },
                {
                    "type": "Microsoft.Network/virtualNetworks/subnets",
                    "apiVersion": "2020-11-01",
                    "name": "[concat('vnet', '/Default')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', 'vnet')]",
                        "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'AzureBastionSubnet')]",
                        "[resourceId('Microsoft.Network/networkSecurityGroups', 'vnet-nsg')]"
                    ],
                    "properties": {
                        "addressPrefix": "10.0.0.0/24",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'vnet-nsg')]"
                        },
                        "serviceEndpoints": [
                            {
                                "service": "Microsoft.ContainerRegistry",
                                "locations": [
                                    "*"
                                ]
                            }
                        ],
                        "delegations": [],
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "vnet-nsg",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "vnet-bastion-ip",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-11-01",
            "name": "vnet-bastion",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'vnet-bastion-ip')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'AzureBastionSubnet')]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'vnet-bastion-ip')]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[concat('swarm-', copyIndex(1), '-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'default')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAddress": "[concat('10.0.0.', copyIndex(11))]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": true
            },
            "copy": {
                "name": "niccopy",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[concat('swarm-', copyIndex(1))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', 'availability-set')]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat('swarm-', copyIndex(1), '-nic'))]"
            ],
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'availability-set')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-with-containers-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat('swarm-', copyIndex(1))]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "deleteOption": "Delete",
                        "diskSizeGB": 512
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat('swarm-', copyIndex(1))]",
                    "adminUsername": "swarm",
                    "adminPassword": "[parameters('vmAdminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('swarm-', copyIndex(1), '-nic'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                },
                "licenseType": "Windows_Client"
            },
            "resources": [
            {
                "condition": "[equals(parameters('DeploymentGroup'), 'Yes')]",
                "name": "TeamServicesAgent",
                "type": "extensions",
                "location": "[resourceGroup().location]",
                "apiVersion": "2017-03-30",
                "dependsOn": [
                    "[resourceId('Microsoft.Compute/virtualMachines', concat('swarm-', copyIndex(1)))]"
                ],
                "properties": {
                    "publisher": "Microsoft.VisualStudio.Services",
                    "type": "TeamServicesAgent",
                    "typeHandlerVersion": "1.0",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                        "VSTSAccountUrl": "[parameters('AzureAccountUrl')]",
                        "TeamProject": "[parameters('AzureProject')]",
                        "DeploymentGroup": "[parameters('AzureDeploymentGroup')]",
                        "AgentName": "[concat('SWARM-', copyIndex(1))]",
                        "Tags": ["2019","SWARM", "[concat('SWARM-', copyIndex(1))]"]
                    },
                    "protectedSettings": {
                        "PATToken": "[parameters('AzureToken')]"
                    }
                }
            },
            {
                "name": "Script",
                "type": "extensions",
                "location": "[resourceGroup().location]",
                "apiVersion": "2021-07-01",
                "dependsOn": [
                    "[resourceId('Microsoft.Network/bastionHosts', 'vnet-bastion')]",
                    "[resourceId('Microsoft.Compute/virtualMachines', concat('swarm-', copyIndex(1)))]"
                ],
                "properties": {
                "protectedSettings": {},
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(variables('BlobStorageUri'), '/', variables('BlobStorageContainer'), '/Script.ps1')]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Bypass -File Script.ps1 -url ', variables('BlobStorageUri'), '/', variables('BlobStorageContainer'), '/Swarm.ps1')]",
                    "timestamp": "[variables('TimeStamp')]"
                }
                }
            }
            ],
            "copy": {
                "name": "vmcopy",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2021-11-01",
            "name": "availability-set",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2
            }
        },
        {
            "condition": "[equals(parameters('DeploymentGroup'), 'Yes')]",
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2021-06-22",
            "name": "ClearUpAgents",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "publicNetworkAccess": true,
                "disableLocalAuth": false,
                "sku": {
                    "name": "Basic"
                },
                "encryption": {
                    "keySource": "Microsoft.Automation",
                    "identity": {}
                }
            },
            "resources": [
                {
                    "condition": "[equals(parameters('DeploymentGroup'), 'Yes')]",
                    "type": "Microsoft.Automation/automationAccounts/runbooks",
                    "apiVersion": "2019-06-01",
                    "name": "ClearUpAgents/ClearUpAgents",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', 'ClearUpAgents')]"
                    ],
                    "properties": {
                        "runbookType": "PowerShell",
                        "logVerbose": false,
                        "logProgress": false,
                        "logActivityTrace": 0,
                        "publishContentLink": {
                            "uri": "[concat(variables('BlobStorageUri'), '/', variables('BlobStorageContainer'), '/Automation.ps1')]"
                        }
                    }
                },
                {
                    "condition": "[equals(parameters('DeploymentGroup'), 'Yes')]",
                    "type": "Microsoft.Automation/automationAccounts/schedules",
                    "apiVersion": "2020-01-13-preview",
                    "name": "ClearUpAgents/DailySchedule",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', 'ClearUpAgents')]"
                    ],
                    "properties": {
                        "expiryTime": "9999-12-31T23:59:00+00:00",
                        "interval": 1,
                        "frequency": "Day",
                        "timeZone": "Europe/London"
                    }
                },
                {
                    "condition": "[equals(parameters('DeploymentGroup'), 'Yes')]",
                    "type": "Microsoft.Automation/automationAccounts/jobSchedules",
                    "apiVersion": "2020-01-13-preview",
                    "name": "[variables('JobSchedulesName')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', 'ClearUpAgents')]",
                        "[resourceId('Microsoft.Automation/automationAccounts/runbooks', 'ClearUpAgents', 'ClearUpAgents')]"
                    ],
                    "properties": {
                        "runbook": {
                            "name": "ClearUpAgents"
                        },
                        "schedule": {
                            "name": "DailySchedule"
                        }
                    }
                },
                {
                    "condition": "[equals(parameters('DeploymentGroup'), 'Yes')]",
                    "type": "Microsoft.Automation/automationAccounts/variables",
                    "apiVersion": "2020-01-13-preview",
                    "name": "ClearUpAgents/AccountUrl",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', 'ClearUpAgents')]"
                    ],
                    "properties": {
                        "isEncrypted": false,
                        "value": "[concat('\"', parameters('AzureAccountUrl'), '\"')]"
                    }
                },
                {
                    "condition": "[equals(parameters('DeploymentGroup'), 'Yes')]",
                    "type": "Microsoft.Automation/automationAccounts/variables",
                    "apiVersion": "2020-01-13-preview",
                    "name": "ClearUpAgents/PoolIds",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', 'ClearUpAgents')]"
                    ],
                    "properties": {
                        "isEncrypted": false,
                        "value": "[concat('\"', parameters('AzurePoolIds'), '\"')]"
                    }
                },
                {
                    "condition": "[equals(parameters('DeploymentGroup'), 'Yes')]",
                    "type": "Microsoft.Automation/automationAccounts/variables",
                    "apiVersion": "2020-01-13-preview",
                    "name": "ClearUpAgents/Token",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', 'ClearUpAgents')]"
                    ],
                    "properties": {
                        "isEncrypted": true,
                        "value": "[concat('\"', parameters('AzureToken'), '\"')]"
                    }
                }
            ] 
        }
    ]
}